{"version":3,"sources":["logo.svg","components/Partial.js","components/General.js","components/SelectPartials.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Partial","props","Fragment","className","class","id","onChange","method","document","getElementById","value","selected","General","style","marginBottom","fontSize","display","fontWeight","inf","color","newCases","dec","newDeath","healthy","SelectPartials","ill","dead","App","state","covid","visible","healtyCount","allCountries","getValueName","console","log","infectedByRegion","filter","i","region","map","deceasedCount","infectedCount","setState","fetch","then","data","json","new_cases","new_death","this","countrydata","p","total_recovered","total_new_cases_today","total_new_deaths_today","infected","deceased","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22418074.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Partial.css';\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n//display all partials\nconst Partial = (props) =>\n{\n  \n  return(\n<React.Fragment>\n\n    {/* <div className=\"row\">\n      <div className=\"col-md-4\"></div>\n      <div className=\"col-md-4\">\n        <Select options={ techCompanies } />\n      </div>\n      <div className=\"col-md-4\"></div>\n    </div> */}\n    <div className=\"options\">\n       <div class=\"form-row align-items-center\">\n        <div class=\"col-auto my-1\">\n  \n         <select class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\" onChange={()=>props.method(document.getElementById(\"inlineFormCustomSelect\").value)}>\n        <option selected>Wybierz województwo ...</option>\n        <option value=\"malopolskie\">Małopolskie</option>\n        <option value=\"slaskie\">Śląskie</option>\n        <option value=\"dolnoslaskie\">Dolnośląskie</option>\n        <option value=\"kujawsko-pomorskie\">Kujawsko-pomorskie</option>\n        <option value=\"lubelskie\">Lubelskie</option>\n        <option value=\"lubuskie\">Lubuskie</option>\n        <option value=\"lodzkie\">Łodzkie</option>\n        <option value=\"mazowieckie\">Mazowieckie</option>\n        <option value=\"opolskie\">Opolskie</option>\n        <option value=\"podkarpackie\">Podkarpackie</option>\n        <option value=\"pomorskie\">Pomorskie</option>\n        <option value=\"swietokrzyskie\">Świętokrzyskie</option>\n        <option value=\"warminsko-mazurskie\">Warmińsko-mazurskie</option>\n        <option value=\"wielkopolskie\">Wielkopolskie</option>\n        <option value=\"zachodniopomorskie\">Zachodniopomorskie</option>\n        \n\n        \n         </select>\n    </div>\n    </div>\n    </div>\n         \n  \n    </React.Fragment>\n  )\n\n  }\n\nexport default Partial","import React from 'react';\n\n\nconst General = (props) =>\n(\n <React.Fragment>\n{/* <div className=\"partials\">\n    \n \n<h1>Zarażenia: <h2 ><b>{props.inf}  </b><h3>dzial</h3></h2></h1>\n        <h1>Zgony: <h2><b >{props.dec}</b></h2></h1>\n        <h1>Ozdrowienia: <h2 style={{color: \"green\"}}><b>{props.healthy}</b></h2></h1>\n        \n\n        </div> */}\n       <div style={{marginBottom: 25}}>\n        <h1 style={{fontSize: 30}}>Zarażenia: </h1>\n    <h2 style={{fontSize: 30,display:'inline',fontWeight: 'bold'}}>{props.inf} </h2><h2 style={{fontSize: 25,display:'inline',color:'grey'}}>(dziś <h2 style={{fontSize: 25,display:'inline',color:'red'}}>{props.newCases}</h2>)</h2>\n    </div>\n    \n\n    <div style={{marginBottom: 25}}>\n    <h1 style={{fontSize: 30}}>Zgony: </h1>\n    <h2 style={{fontSize: 30,display:'inline',fontWeight: 'bold'}}>{props.dec} </h2><h2 style={{fontSize: 25,display:'inline',color:'grey'}}>(dziś <h2 style={{fontSize: 25,display:'inline',color:'red'}}>{props.newDeath}</h2>)</h2>\n   \n    </div>\n    <h1  style={{fontSize: 30}}>Ozdrowienia: <h2 style={{color: \"green\"}}><b>{props.healthy}</b></h2></h1>\n\n      \n    </React.Fragment>\n\n)\n\nexport default General","import React from 'react';\n\n\nconst SelectPartials = (props) =>\n(\n <React.Fragment>\n\n \n<h1 style={{fontSize: 25}}>Zarażeni: <h2 style={{fontSize: 25}}>{props.ill}</h2></h1>\n        <h1 style={{fontSize: 25}}>Zgony: <h2 style={{fontSize: 25}}>{props.dead}</h2></h1>\n  \n    </React.Fragment>\n\n)\n\nexport default SelectPartials","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Partial from './components/Partial';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport General from './components/General';\nimport SelectPartials from './components/SelectPartials';\n\n// pobranie danych i próba wyswietlenia w state\nclass App extends React.Component\n{\n  state={\n    covid:{\n      \"infected\":null,\n      \"deceased\":null,\n      \"infectedByRegion\": [\n      ],\n      \"sourceUrl\": \"https://www.gov.pl/web/koronawirus/wykaz-zarazen-koronawirusem-sars-cov-2\",\n      \"lastUpdatedAtApify\": \"2020-05-03T13:50:00.000Z\",\n      \"readMe\": \"https://apify.com/vaclavrut/covid-pl\"\n    },\n    visible:false,\n    dead:0,\n    ill:0,\n    healtyCount:0,\n    allCountries:\n    {\n      \"countrydata\": [\n        {\n          \"info\": {\n            \"ourid\": 126,\n            \"title\": \"Poland\",\n            \"code\": \"PL\",\n            \"source\": \"https://thevirustracker.com/poland-coronavirus-information-pl\"\n          },\n          \"total_cases\": 15047,\n          \"total_recovered\": 54,\n          \"total_unresolved\": 0,\n          \"total_deaths\": 755,\n          \"total_new_cases_today\": 0,\n          \"total_new_deaths_today\": 0,\n          \"total_active_cases\": 9108,\n          \"total_serious_cases\": 160,\n          \"total_danger_rank\": 33\n        }\n      ],\n      \"stat\": \"ok\"\n    }\n\n    \n\n  \n  }\n  componentDidMount() {\n    console.log(\"mount\")\n    fetch(\"https://api.apify.com/v2/key-value-stores/3Po6TV7wTht4vIEid/records/LATEST?disableRedirect=true\")\n      .then(data =>data.json())\n      .then(json => this.setState({covid:json}));\n\n      fetch(\"https://api.thevirustracker.com/free-api?countryTotal=PL\")\n      .then(data =>data.json())\n      .then(json => this.setState({allCountries:json}));\n\n\n\n  }\n  getValueName = (id) =>\n  {\n    console.log(\"get name\")\n   let dead=0;\n   let ill=0;\n   const array=this.state.covid.infectedByRegion.filter(i=>i.region==id).map(i=>dead=i.deceasedCount);\n   const array1=this.state.covid.infectedByRegion.filter(i=>i.region==id).map(i=>ill=i.infectedCount)\n    \n\n    this.setState({dead:dead, ill:ill,visible:true})\n    \n    \n  }\n\n  \n\n  \n\n render()\n {\n   let healthy=0;\n   let new_cases=0;\n   let new_death=0;\n  const state=this.state.allCountries.countrydata.map(p=>healthy=p.total_recovered);\n  const state1=this.state.allCountries.countrydata.map(p=>new_cases=p.total_new_cases_today)\n  const state2=this.state.allCountries.countrydata.map(p=>new_death=p.total_new_deaths_today)\n\n \n\n   return(\n     \n    <React.Fragment>\n      <div className=\"general\">\n           \n           <div className=\"title\"> <h1 style={{fontSize: 20}}>COVID-19 in POLAND</h1></div>\n           <General inf={this.state.covid.infected} dec={this.state.covid.deceased} healthy={healthy} newCases={new_cases} newDeath={new_death}></General>\n\n        </div>\n        <h4>Podział na województwa</h4>\n     <Partial method={this.getValueName} visible={this.state.visible} ></Partial>\n    \n    \n     <div className=\"partialss\">\n       {this.state.visible ? <SelectPartials dead={this.state.dead} ill={this.state.ill}></SelectPartials>:null}\n     </div>\n     <footer>Copyright © Smolec Bartłomiej</footer>\n     </React.Fragment>\n     )\n   \n     \n }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}